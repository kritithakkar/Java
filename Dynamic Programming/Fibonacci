package DynamicProgramming;

import java.util.Arrays;

public class Fibonacci {
    static int[] dp;
    public static int fibo(int n)
    {
        // Top Down (Memoisation)
        if(n<=1)
            return n;
        if(dp[n] != -1)
            return dp[n];
        return dp[n] = fibo(n-1) + fibo(n-2);
    }
    public static int fibo2(int n)
    { 
        // Bottom Up 
        if(n<=1)
            return n;
        int prev =0;
        int prev2= 1;
        for(int i=2;i<=n;i++)
        {
            int curr = prev + prev2;
            prev = prev2;
            prev2 = curr;
        }
        return prev2;
    }
    public static void main(String[] args) {
        int n = 5;
        dp = new int[n+1];
        Arrays.fill(dp,-1);
        System.out.println(fibo(n));
        System.out.println(fibo2(n));

    }
}
