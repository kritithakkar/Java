package BitManipulation;

import java.util.ArrayList;
import java.util.List;

/*
Input: nums = [1,2,3]
Output: [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]
subsets = 2^n = 2^3 = 8  so we can achieve through left shift
 */
public class subset {
    public static List<List<Integer>> subset(int arr[])
    {
       List<List<Integer>> l = new ArrayList<>();
       for(int i=0;i<(1<<arr.length);i++)
       {
           List<Integer> p = new ArrayList<>();
          for(int j=0;j<arr.length;j++)
          {
              if(((1 << j)& i)!=0){
                  p.add(arr[j]);
              }
          }
           l.add(p);
       }
       return l;
    }

    public static void main(String[] args) {
int[] arr= {1,2,3};
        List<List<Integer>> result = subset(arr);

        // Print all subsets
        for (List<Integer> subset : result) {
            System.out.println(subset);
        }
    }
}
